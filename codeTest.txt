switch (attribute) {
                            case "examDate":
                            case "claimDate":
                                Date date = parseDate(newValue);
                                if (date != null) {
                                    if (attribute.equals("examDate")) {
                                        claim.setExamDate(date);
                                    } else if (attribute.equals("claimDate")) {
                                        claim.setClaimDate(date);
                                    }
                                    // Write updated JSON file
                                    writePolicyHoldersToJson(holders, filePath);
                                } else {
                                    System.out.println("Invalid date format for " + attribute);
                                }
                                break;
                            default:
                                System.out.println("Attribute " + attribute + " cannot be modified.");
                                return;
                        }


public void deleteClaimPolicyHolders(List<PolicyHolder> policyHolders, String policyHolderId) {
        List<String> claimIdList = extractClaimIDPolicyHolder(holders, policyHolderId);
        System.out.println("Claim IDs for Policy Holder with ID "+ policyHolderId+ ":");
                for (String claimID : claimIdList) {
                    System.out.println(claimID);
                }
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter claimID (f-10 digits: ");
        String claimId = scan.nextLine();


        String filePath = "list_policyHolder.json";
        for (PolicyHolder policyHolder : policyHolders) {
            if (policyHolder.getId().equals(policyHolderId)) {
                List<Claim> claims = policyHolder.getClaims();
                for (Iterator<Claim> iterator = claims.iterator(); iterator.hasNext();) {
                    Claim claim = iterator.next();
                    if (claim.getId().equals(claimId)) {
                        iterator.remove();
                        System.out.println("Deleted");
                        try {
                            // Write the updated list of policy holders to JSON file
                            writePolicyHoldersToJson(policyHolders, filePath);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        return;
                    }
                }
                System.out.println("Claim with ID " + claimId + " not found for policy holder with ID " + policyHolderId);
                return;
            }
        }
        System.out.println("Policy holder with ID " + policyHolderId + " not found.");
    }
