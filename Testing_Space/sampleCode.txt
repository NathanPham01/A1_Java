import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.FileWriter;
import java.util.List;

interface ClaimsProcessManager {
    void addClaims(List<PolicyHolder> holders, String policyHolderId, Claim claim);
}

public class ModifyPolicyHolder implements ClaimsProcessManager {
    public static void main(String[] args) {
        // Load JSON data into a list of PolicyHolder objects
        List<PolicyHolder> holders = loadPolicyHoldersFromJson("data.json");

        // Modify the claim amount
        modifyClaimAmount(holders, "2", "f-987654321", 2000.00);

        // Add a new claim
        new ModifyPolicyHolder().addClaims(holders, "1", new Claim("f-999999999", "2024-04-10", "John Doe", "1234567890", "2024-04-05", new ArrayList<String>(), 2500.00, "New"));

        // Write the modified list back to the JSON file
        writePolicyHoldersToJson(holders, "data.json");
    }

    public static List<PolicyHolder> loadPolicyHoldersFromJson(String filePath) {
        List<PolicyHolder> holders = null;
        try (Reader reader = new FileReader(filePath)) {
            Gson gson = new Gson();
            Type listType = new TypeToken<List<PolicyHolder>>(){}.getType();
            holders = gson.fromJson(reader, listType);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return holders;
    }

    public static void modifyClaimAmount(List<PolicyHolder> holders, String policyHolderId, String claimId, double newAmount) {
        for (PolicyHolder holder : holders) {
            if (holder.getId().equals(policyHolderId)) {
                for (Claim claim : holder.getClaims()) {
                    if (claim.getId().equals(claimId)) {
                        claim.setClaimAmount(newAmount);
                        return;
                    }
                }
            }
        }
        System.out.println("PolicyHolder or Claim not found.");
    }

    @Override
    public void addClaims(List<PolicyHolder> holders, String policyHolderId, Claim claim) {
        for (PolicyHolder holder : holders) {
            if (holder.getId().equals(policyHolderId)) {
                holder.getClaims().add(claim);
                return;
            }
        }
        System.out.println("PolicyHolder not found.");
    }

    public static void writePolicyHoldersToJson(List<PolicyHolder> holders, String filePath) {
        try (FileWriter writer = new FileWriter(filePath)) {
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            gson.toJson(holders, writer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
